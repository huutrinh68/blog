(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{555:function(n,t,i){"use strict";i.r(t);var c=i(8),e=Object(c.a)({},(function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[i("p",[n._v("Trong khi xây dựng các mạng CNN, khái niệm padding và stride là 2 trong nhiều khái niệm cơ bản. Bài này giới thiệu về stride.")]),n._v(" "),i("p",[i("img",{attrs:{src:"https://user-images.githubusercontent.com/8240899/134879804-aeb49290-34d8-451d-b995-4d5f9b75baf3.png",alt:"stride_convolutions"}})]),n._v(" "),i("h2",{attrs:{id:"stride-la-gi"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#stride-la-gi"}},[n._v("#")]),n._v(" Stride là gì?")]),n._v(" "),i("p",[n._v("Stride đơn giản hiểu là bước trượt, số bước skip khi áp dụng phép biến đổi convolutions.")]),n._v(" "),i("p",[n._v("Giả sử "),i("code",[n._v("stride = 2")]),n._v(", tức là khi tính áp dụng convolutions xong:")]),n._v(" "),i("ul",[i("li",[n._v("Nhảy sang phải 2 pixel để tính áp dụng kernel vào đó tính tiép convolution cho những pixel ở vùng mới đó.")]),n._v(" "),i("li",[n._v("Cứ tính convolution xong lại dịch chuyển kernel đi 2 pixel tính covolutions cho đến khi hết.")]),n._v(" "),i("li",[n._v("Bước dịch chuyển này được áp dụng cho cả chiều ngang lẫn chiều dọc.")])]),n._v(" "),i("h2",{attrs:{id:"ket-luan"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#ket-luan"}},[n._v("#")]),n._v(" Kết luận")]),n._v(" "),i("p",[n._v("Tổng kết lại, ta có tóm tắt công thức sau")]),n._v(" "),i("p",[n._v("Output sẽ có kích thước là: phần nguyên cận dưới của "),i("code",[n._v("(n+2p-f)/s + 1 * [(n+2p-f)/s + 1]")])]),n._v(" "),i("ul",[i("li",[n._v("Điều kiện "),i("code",[n._v("input size = n*n, padding = p")]),n._v(", "),i("code",[n._v("stride = s")]),n._v(", "),i("code",[n._v("kernel size = f")])]),n._v(" "),i("li",[n._v("Trong đó [a] là phần nguyên cận dưới của a.")])])])}),[],!1,null,null,null);t.default=e.exports}}]);